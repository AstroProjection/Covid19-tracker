{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryDropdown/CountryDropdown.js","App.js","index.js","components/Chart/Chart.module.css","App.module.css","components/CountryDropdown/CountryDropdown.module.css","images/covid19.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","alignItems","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","delay","separator","Date","toDateString","apiURL","fetchData","country","a","pURL","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountryList","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchedData","fetchAPI","LineChart","length","chart","labels","datasets","label","borderColor","fill","backgroundColor","height","BarChart","options","title","text","display","legend","maintainAspectRatio","CountryDropdown","countryChange","countryList","setCountryList","fetchCountries","FormControl","form","InputLabel","focused","NativeSelect","defaultValue","onChange","e","target","index","key","App","state","handleCountryChange","setState","error","this","covidImage","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56bd2aa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1DMs_\",\"card\":\"Cards_card__HZc2I\",\"infected\":\"Cards_infected__C4IYO\",\"recovered\":\"Cards_recovered__1BIOb\",\"deaths\":\"Cards_deaths__2oDJ-\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\r\n  // console.log({ confirmed, deaths, recovered, lastUpdate });\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12} /// taking full width of mobile device\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.75}\r\n                delay={0.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Last Updated:{new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of active cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12} /// taking full width of mobile device\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.75}\r\n                delay={0.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Last Updated:{new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of recovered cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12} /// taking full width of mobile device\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.75}\r\n                delay={0.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Last updated:{new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths due to Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst apiURL = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let pURL = apiURL;\r\n  if (country && country !== \"-\") {\r\n    pURL = `${apiURL}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(pURL);\r\n\r\n    const modifiedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${apiURL}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountryList = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${apiURL}/countries`);\r\n    return countries.map((country) => {\r\n      return country.name;\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = ({\r\n  data: { confirmed, recovered, deaths, lastUpdate },\r\n  country,\r\n}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedData = await fetchDailyData();\r\n      setDailyData(fetchedData);\r\n    };\r\n    fetchAPI();\r\n  }, [country]);\r\n\r\n  const LineChart =\r\n    dailyData.length !== 0 ? (\r\n      <Line\r\n        className={styles.chart}\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#0033FF\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba( 255, 0, 0, 0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n        height={200}\r\n      />\r\n    ) : (\r\n      console.log(\"empty\")\r\n    );\r\n  const BarChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n            // label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,100,255,0.7)\",\r\n              \"rgba(0,255,33,0.7)\",\r\n              \"rgba(255,33,0,0.7)\",\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          text: `Current State in ${country}`,\r\n          display: true,\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n        maintainAspectRatio: true,\r\n      }}\r\n      height={200}\r\n    />\r\n  ) : null;\r\n\r\n  // console.log(LineChart);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country && country !== \"-\" ? BarChart : LineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NativeSelect, FormControl, InputLabel } from \"@material-ui/core\";\r\nimport { fetchCountryList } from \"../../api\";\r\nimport styles from \"./CountryDropdown.module.css\";\r\n\r\nconst CountryDropdown = ({ countryChange }) => {\r\n  const [countryList, setCountryList] = useState([]);\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setCountryList(await fetchCountryList());\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.form}>\r\n      <InputLabel focused={true}>Select Country:</InputLabel>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          countryChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"-\">Global</option>\r\n        {countryList.map((country, index) => (\r\n          <option key={index} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryDropdown;\r\n","import React from \"react\";\nimport { Cards, Chart, CountryDropdown } from \"./components\";\nimport { fetchData } from \"./api\";\n\nimport covidImage from \"./images/covid19.png\";\n\nimport styles from \"./App.module.css\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    try {\n      const fetchedData = await fetchData(country);\n      this.setState({ data: fetchedData, country: country });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img\n          className={styles.covidImage}\n          src={covidImage}\n          alt=\"COVID-19 image\"\n        />\n        <Cards data={data} />\n        <CountryDropdown countryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__SP_vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3zMQ7\",\"titleImage\":\"App_titleImage__3F02z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CountryDropdown_form__Qdp1z\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}